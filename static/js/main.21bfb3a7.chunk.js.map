{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.js","components/Layout/Layout.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Layout","INITIAL_STATE","name","number","ContactForm","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","this","Form","htmlFor","nameInputId","Label","LabelText","id","type","onChange","placeholder","pattern","title","maxLength","Input","numberInputId","Button","Component","Filter","required","onDeleteContact","onClick","ContactItem","Contact","ContactName","ContactList","contacts","length","map","App","filter","addContact","find","contact","alert","trim","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContactsSortByName","sort","a","b","nameA","toUpperCase","nameB","deleteContact","contactId","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21bfb3a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__1WNGh\",\"Label\":\"ContactForm_Label__3weHs\",\"LabelText\":\"ContactForm_LabelText__3hAd_\",\"Input\":\"ContactForm_Input__7pRrn\",\"Button\":\"ContactForm_Button__1ufaT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__1jbOM\",\"ContactItem\":\"ContactList_ContactItem__2mluO\",\"Contact\":\"ContactList_Contact__6CXPv\",\"ContactName\":\"ContactList_ContactName__1RMl6\",\"Button\":\"ContactList_Button__2mfER\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__2PTYX\",\"LabelText\":\"Filter_LabelText__3PTkJ\",\"Input\":\"Filter_Input__2uPF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__213vn\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Container.module.css\";\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Container from \"../Container\";\n\nconst Layout = ({ children }) => <Container>{children}</Container>;\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = { ...INITIAL_STATE };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n\n    this.props.onSubmit({ ...this.state });\n\n    if ((!name && number) || (name && !number)) {\n      return;\n    }\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.Form}>\n        <label htmlFor={this.nameInputId} className={styles.Label}>\n          <span className={styles.LabelText}>Name</span>\n          <input\n            id={this.nameInputId}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            placeholder=\"Enter name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            // required\n            maxLength=\"40\"\n            className={styles.Input}\n          />\n        </label>\n\n        <label htmlFor={this.numberInputId} className={styles.Label}>\n          <span className={styles.LabelText}>Number</span>\n          <input\n            id={this.numberInputId}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            placeholder=\"Enter number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            // required\n            maxLength=\"18\"\n            className={styles.Input}\n          />\n        </label>\n\n        <button type=\"submit\" className={styles.Button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","// import React from 'react';\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.Label}>\n      <span className={styles.LabelText}>Find contacts by name</span>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={value}\n        onChange={onChange}\n        placeholder=\"Enter name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        className={styles.Input}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","// import React from 'react';\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nconst Button = ({ onDeleteContact }) => (\n  <button onClick={onDeleteContact} className={styles.Button}>\n    Delete\n  </button>\n);\n\nconst ContactItem = ({ name, number, onDeleteContact }) => (\n  <li className={styles.ContactItem}>\n    <p className={styles.Contact}>\n      <span className={styles.ContactName}>{name}:</span> {number}\n    </p>\n    <Button onDeleteContact={onDeleteContact} />\n  </li>\n);\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul className={styles.ContactList}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          name={name}\n          number={number}\n          onDeleteContact={() => onDeleteContact(id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from \"react\";\n\nimport Layout from \"../components/Layout\";\nimport ContactForm from \"../components/ContactForm\";\nimport Filter from \"../components/Filter\";\nimport ContactList from \"../components/ContactList\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    if (contacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    if (contacts.find((contact) => contact.number === number)) {\n      alert(`Number ${number} is already in contacts`);\n      return;\n    }\n\n    if ((!name || name.trim() === \"\") && (!number || number.trim() === \"\")) {\n      alert('Fill in the fields \"Name\" and \"Number\"');\n      return;\n    }\n\n    if (!name || name.trim() === \"\") {\n      alert('Field \"Name\" is empty');\n      return;\n    }\n\n    if (!number || number.trim() === \"\") {\n      alert('Field \"Number\" is empty');\n      return;\n    }\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  getVisibleContactsSortByName = () => {\n    const visibleContacts = this.getVisibleContacts();\n\n    const visibleContactsSortByName = visibleContacts.sort((a, b) => {\n      const nameA = a.name.toUpperCase();\n      const nameB = b.name.toUpperCase();\n\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    });\n\n    return visibleContactsSortByName;\n  };\n\n  deleteContact = (contactId) => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((contact) => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const filteredContacts = this.getVisibleContactsSortByName();\n\n    return (\n      <Layout>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}